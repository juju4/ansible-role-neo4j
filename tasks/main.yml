---
- name: Include OS family specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Include OS specific tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: Install Neo4j
  ansible.builtin.package:
    name: neo4j
    state: present

- name: Ensure graph DB folder exists and has the correct permissions
  ansible.builtin.file:
    path: "{{ neo4j_server_database_location }}"
    state: directory
    owner: neo4j
    group: "{{ neo4j_group }}"
    mode: 0755

- name: Set the neo4j data directory
  ansible.builtin.lineinfile:
    dest: /etc/neo4j/neo4j.conf
    regexp: '^dbms\.directories\.data=.*'
    line: "dbms.directories.data={{ neo4j_server_database_location }}"
    state: present
  notify: Restart Neo4j

- name: Set the neo4j config
  ansible.builtin.template:
    src: neo4j.conf.j2
    dest: /etc/neo4j/neo4j.conf
    mode: '0644'
  notify: Restart Neo4j

- name: Ensure open files soft and hard limits are set
  ansible.builtin.copy:
    src: etc/security/limits.d/neo4j.conf
    dest: /etc/security/limits.d/neo4j.conf
    owner: root
    group: root
    mode: 0644

- name: Ensure pam_limits.so is enabled
  ansible.builtin.lineinfile:
    dest: /etc/pam.d/su
    regexp: '^(# )?session    required   pam_limits.so'
    line: "session    required   pam_limits.so"
    state: present

- name: Ensure the Neo4j service is enabled and started
  ansible.builtin.service:
    name: neo4j
    enabled: true
    state: started

# https://neo4j.com/docs/operations-manual/current/configuration/set-initial-password/
- name: Set Neo4j initial password
  ansible.builtin.command: "neo4j-admin set-initial-password '{{ neo4j_password }}'"
  args:
    creates: /var/lib/neo4j/data/dbms/auth.ini
  when: neo4j_password is defined and neo4j_password | string
